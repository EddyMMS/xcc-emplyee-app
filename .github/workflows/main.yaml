name: Build source code

on:
  push:
        branches:
          - main
          - develop
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Build & Test with Maven
        run: chmod +x mvnw && ./mvnw clean package # Dockerfile

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

#- Dockerfile rauskopieren und in die lokale Dockerfile (hier) übertragen -> commit and push
      #- Im Github Action Build das Docker image baust (docker build . -t xcc-employee-app) nur wenn der branch master oder develop ist
      #- Gib dem image folgende tags
      #        - commit sha
      #        - master als tag falls branch master
      #        - develop asl tag falls develop

      #- Upload des Docker images auf docker hub (registrieren, neues image anlegen, hol dir einen api key, api key in github hinterlegen)
      # Was ist ein Personal Access Token, wie unterscheidet es sich von einem Passwort (Vor- Nachteile)

      # Personal Access Token sind Authentifizierungswerkzeuge. Es dient als Ersatz für ein Passwort und ermöglicht
      # den Zugriff auf bestimmte Ressourcen oder Dienste
      # Vorteil: Erhöhte Sicherheit durch begrenzte Berechtigung; Außerdem leichtere Verwaltung, da sie spezifisch erstellt werden
      # Nachteil: Müssen sicher gespeichert werden, Verlust stellt ein Sicherheitsrisiko dar, Möglicherweise weniger vertraut für Benutzer, die mit PWs arbeiten

      - name: Build Docker Image
        run: |
          TAG=${GITHUB_SHA}
          if [ "${GITHUB_REF#refs/heads/}" == "master" ]; then
                      TAGS="$TAG master"
                    elif [ "${GITHUB_REF#refs/heads/}" == "develop" ]; then
                      TAGS="$TAG develop"
                    fi
                    docker build -t xcc-employee-app:${TAG} ${TAGS} .


      #     docker command (Build docker image from dockerfile)

      - name: Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker push xcc-employee-app:$IMAGE_TAG
